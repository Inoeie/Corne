/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
//#include <dt-bindings/zmk/mouse.h>
#include <../boards/shields/corne/boards/nice_nano.overlay>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
   behaviors {
		mo_to: behavior_mo_to {
			compatible = "zmk,behavior-hold-tap";
			label = "mo_to";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&to>;
		};
		kp_mo: behavior_kp_mo {
			compatible = "zmk,behavior-hold-tap";
			label = "kp_mo";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&mo>;
		};
	};
	
	combos {
		compatible = "zmk,combos";
		combo_shift {
			timeout-ms = <80>;
			key-positions = <24 35>;
			bindings = <&kp CAPS>;
		};
		combo_layer {
			timeout-ms = <150>;
			key-positions = <36 41>;
			bindings = <&mo RAISE>;
		};
	};
	
   keymap {
      compatible = "zmk,keymap";

      // -----------------------------------------------------------------------------------------
      // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
      // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | RET |
      // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SFT |
      //                    | GUI | LWR | BKS |   | SPC | RSE  | ALT |
      default_layer {
         bindings = <
            &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
            &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                           &kp LGUI &mo LOWER &kp BSPC &kp SPACE &mo LOWER &kp LALT  
         >;
      };

      // -----------------------------------------------------------------------------------------
      // |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ESC |
      // | CTRL |     |     |  UP |  -  |  [  |   |  ]  |  +  |     |  #  |  '  | RET |
      // | SHFT |  \  | LFT | DWN | RGT |HOME |   | END |     |     |     |     | SHFT|
      //                    | RGB | LWR | BKS |   | SPC | RSE | ALT |
      lower_layer {
         bindings = <
            &kp GRAVE &kp N1       &kp N2 &kp N3   &kp N4    &kp N5    		&kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &trans 
            &trans &none           &none  &kp UP &kp MINUS  &kp LBKT 		&kp RBKT  &kp PLUS &none &kp NON_US_HASH  &kp SQT &trans
            &trans &kp NON_US_BSLH &kp LEFT &kp DOWN &kp RIGHT &kp HOME  	&kp END   &none    &none    &none    &none     &trans
                                   &ext_power EP_TOG &trans    &kp DEL   		&trans    &trans    &kp RALT
         >; //
      };

      // -----------------------------------------------------------------------------------------
      // |  F1  |  F2 |  F3 | F4  |  F5 |  F6 |   | F7  |  F8 |  F9 | F10 | F11 | F12  |
      // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | EFR | EFF | BRI | SPI | HUI |      |
      // |      |     |     | BTP | BTN |     |   |NEXT |  PP | BRD | SPD | HUD |      |
      //                    |     | LWR |     |   |     | RSE |     |
      raise_layer {
         bindings = <
            &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6     									&kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
            &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &rgb_ug RGB_EFR	 &rgb_ug RGB_EFF 	&rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_HUI &none
            &none 	   &none 		&none 		 &bt BT_PRV   &bt BT_NXT   &none     		&kp C_NEXT       &kp C_PLAY_PAUSE 	&rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_HUD &none
												 &none        &none		   &trans     		&trans &none &none
         >;
      };
   };
};
